type: 'VoxelNet'

optimizer:
  type: 'Adam'
  lr: 0.001
  weight_decay: 0.0

scheduler:
  type: 'StepLR'
  step_size: 300
  gamma: 0.1

teacher:
  none: none

voxel_size: ${data.voxel_size}
voxel_dim_train: ${data.voxel_dim_train}
voxel_dim_val: ${data.voxel_dim_val}
voxel_dim_test: ${data.voxel_dim_test}
output_dir: "${paths.output_dir}"

encoder:
  use_spatial: true
  spatial:
    backbone: 'resnet34'  # resnet18, resnet34, resnet50
    pretrained: true
    num_layers: 4 # latent_size = [0, 64, 128, 256, 512, 1024][num_layers]  # initially 4 -> CUDA out of memory
    index_interp: 'bilinear'
    index_padding: 'border'
    upsample_interp: 'bilinear'
    feature_scale: 2.0
    use_first_pool: true
    norm_type: 'batch'
    blur_image: False
    kernel_size: 41
    sigma: 10.0
  
  # NOT SUPPORTED:
  #use_pointnet: true
  #pointnet:  # based on: pointcloud/room_3plane.yaml from conv_onet
  #  num_sparse_points: 512
  #  c_dim: 32
  #  dim: 3
  #  padding: 0.1
  #  hidden_dim: 32
  #  scatter_type: 'max'  # or 'mean'
  #  plane_type: ['xz', 'xy', 'yz']
  #  plane_resolution: 128
  #  n_blocks: 5
  #  unet: True
  #  unet_kwargs:
  #    depth: 5
  #    merge_mode: concat
  #    start_filts: 32
  #  sample_mode: bilinear # bilinear / nearest (for decoding feature-planes)
  #plane_merger:  # for pointnet is used
  #  strategy: 'average'  # 'average' or 'learn'
  #  alpha: 0.1  # only for 'learn'
  #use_auxiliary: false  # whether to additionally encode teacher-features

# expects input feature dim: backbone3d.channels[0] -> 32
backbone3d:
  channels: [32, 64, 128, 256]      # [32, 64, 128]
  layers_down: [1, 2, 3, 4]         # [1, 2, 3]
  layers: [3, 2, 1]                 # [3,3,3]
  norm: 'nnSyncBN'                  # BN
  drop: 0.0                         # 0.0
  conditional_skip: False           # True

heads:
  use_tsdf: True
  tsdf:
    multi_scale: True
    loss_weight: 1.0
    label_smoothing: 1.05
    loss_split: 'pred'
    loss_log_transform: True
    loss_log_transform_shift: 1.0
    sparse_threshold: [.99, .99, .99]


# compile model for faster training with pytorch 2.0
compile: false